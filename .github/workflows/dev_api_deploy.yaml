name: Terraform Deploy ML API DEV
on:
    workflow_dispatch:
    push:
      branches:
        - develop

env:
    HTTP_PROXY: http://emea-aws-webproxy.service.cloud.local:3128
    HTTPS_PROXY: http://emea-aws-webproxy.service.cloud.local:3128
    NO_PROXY: 127.0.0.1,localhost,169.254.169.254,.sanofi.com,.cloud.local,sts.us-east-1.amazonaws.com,execute-api.us-east-1.amazonaws.com,s3.us-east-1.amazonaws
    TF_VAR_snowflakepassword_dev: ${{secrets.TF_VAR_SNOWFLAKEPASSWORD_DEV}}
    TF_VAR_snowflakepassword_uat: ""
    TF_VAR_snowflakepassword_prod: ""
    TF_VAR_sslcert_dev: ${{secrets.TF_VAR_PREDICTSSLCERT_DEV}}
    TF_VAR_sslkey_dev: ${{secrets.TF_VAR_PREDICTSSLKEY_DEV}}
    TF_VAR_sslcert_uat: ""
    TF_VAR_sslcert_prod: ""
    TF_VAR_sslkey_uat: ""
    TF_VAR_sslkey_prod: ""
jobs:
  plan-terraform:
    runs-on: [self-hosted, atmos-aws-shared-gh-runner]
    environment: develop

    steps:
        - name: Checkout
          uses: actions/checkout@v3

        - name: Install AWS CLI
          run: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            aws --version

        - name: Install terraform
          run: |
            release=`curl -s https://api.github.com/repos/hashicorp/terraform/releases/latest |  grep tag_name | cut -d: -f2 | tr -d \"\,\v | awk '{$1=$1};1'`
            wget https://releases.hashicorp.com/terraform/${release}/terraform_${release}_linux_amd64.zip
            unzip terraform_${release}_linux_amd64.zip
            sudo mv terraform /usr/bin/terraform

        - uses: Sanofi-GitHub/eccs-atmos-aws-token-vending-machine/action@v1
          with:
            targetRoleArn: ${{ vars.IAM_ROLE }}
            targetRoleExternalId: ${{ secrets.IAM_ENTITY }}
            tvmToken: ${{ secrets.IAM_TOKEN }}

        - name: plan
          run: |
            terraform init -backend-config="bucket=sanofi-chc-emea-anp-terraformstate-dev" -backend-config="region=eu-west-1"
            terraform plan -var-file="dev.tfvars" -out "anp-apa-ml-be-infrastructure-dev-planfile"
        - name: apply
          run: |
            terraform apply -input=false "anp-apa-ml-be-infrastructure-dev-planfile"
                